@startuml
actor User as Actor
participant CreateCourseUI as UI <<presentation>>
participant CreateCourseController as Controller <<aplication>>
participant CourseBuilder as Builder <<builder>>
participant Course as Domain <<domain>>
participant PersistenceContext as Persistence <<persistence>>
participant RepositoryFactory as Factory <<factory>>
database CourseRepository as Repository <<repository>>

Actor -> UI: Create course
activate UI
    UI -> Controller: create
    UI --> Actor: Ask course information
    Actor --> UI: id, name, description,edition

    loop option !=0
        UI --> Actor: Show list/n of states
        Actor --> UI: State type
    end

    UI -> Controller: CreateCourse(id, name, description,\n edition, state)
    activate Controller
        note right of Builder:CourseBuilder is used for create \n entity of type course on valid state
        Controller -> Builder: create
        Controller -> Builder: setId(id)

        note right of Controller: Set the rest of the information
        Controller -> Builder: CreateCourse()
        activate Builder
            Builder -> Domain: create (id,name\ndescription,state,edition)
            Domain -> Builder: Course
            Builder -> Controller: Course
        deactivate builder

        Controller -> Persistence: repositories()
        activate Persistence
            note right of Persistence: pode criar repositório em memória ou JPA
            Persistence -> Factory: create
            Persistence -> Controller: factory
        deactivate Persistence

        Controller -> Factory: Course()
        activate Factory
            Factory -> Repository: create
            Factory -> Controller: CourseRepository
        deactivate Factory

        Controller->Repository:save(Course)
        Controller->UI: Course
    deactivate Controller

    UI-->Actor: displayCourseInfo
deactivate UI
@enduml