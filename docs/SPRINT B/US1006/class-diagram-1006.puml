@startuml
actor User as Actor
participant ListCourseUI as UI <<presentation>>
participant ListCourseController as Controller <<aplication>>
participant PersistenceContext as Persistence <<persistence>>
participant AppSettings as App <<appSettings>>
participant RepositoryFactory as Factory <<factory>>
database CourseRepository as Repository <<repository>>

Actor -> UI: show()
UI -> UI: doShow()
activate UI
    UI -> Controller: ListCourses()
    activate Controller
        Controller -> Persistence: Repositories()
        Persistence -> App: instance()
        Persistence -> App: getRepositoryFactory()
        activate App
            App --> Factory: create
            activate Factory
            Factory --> App
            deactivate Factory
        App --> Controller
           deactivate App
        Controller -> Factory: Courses()
        Factory --> Repository:create()
        Controller -> Repository: List = all()
        activate Repository
            Repository --> Controller
        deactivate Repository
        Controller --> UI: List
    deactivate Controller
    UI --> Actor
deactivate UI
@enduml