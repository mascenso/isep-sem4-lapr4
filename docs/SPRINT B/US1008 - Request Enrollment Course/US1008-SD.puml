@startuml
'https://plantuml.com/sequence-diagram

autonumber

actor Student as Actor
activate Actor
participant RequestEnrollmentUI as UI <<Presentation>>
control CourseEnrollmentController as Controller <<Application>>
participant CourseEnrollmentService as Service <<Application>>
database CourseRepository as CourseRepository <<Repository>>
participant CourseEnrollmentRequestBuilder as Builder <<Application>>
participant "theCourseEnrollment:CourseEnrollment" as CourseEnrollment <<Domain>>
participant PersistenceContext as Persistence <<persistence>>
participant RepositoryFactory as Factory <<factory>>
database CourseEnrollmentRepository as Repository <<Repository>>


Actor -> UI: Select the option to \nrequest the enrollment in courses
activate UI
UI -> Controller: listEnrollingCourses()
activate Controller
Controller -> Service: listEnrollingCourses()
activate Service
Service -> CourseRepository: listEnrollingCourses()
deactivate Service
activate CourseRepository
CourseRepository -> Controller: course.ENROLL
deactivate CourseRepository
Controller -> UI: course.ENROLL
UI -> Actor: course.ENROLL
Actor -> UI: Student selects the course he wishes\n to enroll
UI -> Controller: createCourseEnrollmentRequest(course, student)
Controller -> Builder: buildOrThrow()
activate Builder
Builder -> CourseEnrollment: CourseEnrollment(course, student)
activate CourseEnrollment
CourseEnrollment -> Builder: CourseEnrollment
deactivate CourseEnrollment
Builder -> Controller: CourseEnrollment
deactivate Builder
Controller -> Persistence: repositories()
activate Persistence
Persistence -> Factory: newInstance()
Activate Factory
Factory -> Persistence: CourseEnrollment
deactivate Factory
Persistence -> Controller: CourseEnrollment
deactivate Persistence
Controller -> Repository: save(courseEnrollment)
activate Repository
Repository -> Controller: courseEnrollment
deactivate Repository
Controller -> UI: courseEnrollment
deactivate Controller
Actor <- UI: Back to menu
deactivate UI


@enduml